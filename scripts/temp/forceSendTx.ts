import { ethers } from "ethers";

// RPC endpoint URL
const rpcUrl = "https://nd-829-997-700.p2pify.com/790712c620e64556719c7c9f19ef56e3" // Arbitrum
// const rpcUrl = "https://base-mainnet.core.chainstack.com/e7aa01c976c532ebf8e2480a27f18278"; // base

// Create a provider
const provider = new ethers.JsonRpcProvider(rpcUrl);
const privateKey = process.env.PRIVATE_KEY0!;
const wallet = new ethers.Wallet(privateKey, provider);

// The raw transaction data
const rawTx = {
    to: "0x4ee98442d97047F94556684A714Cbcb204bf84a0", // Address of the receiver or contract
    value: 10, // Amount to send (for ETH transfers)
    data: "0xedba2c0f0000000000000000000000000000000000000000000000001bc16d674ec800000000000000000000000000000000000000000000000000000000000000017dd70000000000000000000000009f6abbf0ba6b5bfa27f4deb6597cc6ec20573fda000000000000000000000000af88d065e77c8cc2239327c5edb3a432268e5831000000000000000000000000111111125421ca6dc452d289314280a0f8842a6500000000000000000000000000000000000000000000000000000000000001800000000000000000000000000000000000000000000000000000000000002105000000000000000000000000833589fcd6edb6e08f4c7c32d4f71b54bda02913000000000000000000000000cebb7265ed625f8df2336c00d0ec6656bea9e6bbf241803fee78f7652fb5bc92ae8b2af8965050b685f4997a2e2cde603ce33a560000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000046000000000000000000000000000000000000000000000000000000000000002a807ed2379000000000000000000000000e37e799d5077682fa0a244d46e5649f71457bd090000000000000000000000009f6abbf0ba6b5bfa27f4deb6597cc6ec20573fda000000000000000000000000af88d065e77c8cc2239327c5edb3a432268e58310000000000000000000000003fec70f319a4145eba17765ae0c64b2232fe5bae0000000000000000000000001269c5a644adddca0b810d0c22975b5970005f1b0000000000000000000000000000000000000000000000001bc16d674ec800000000000000000000000000000000000000000000000000000000000000017dd700000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000120000000000000000000000000000000000000000000000000000000000000015800000000000000000000000000000000000000000000013a00010c00001a0020d6bdbf789f6abbf0ba6b5bfa27f4deb6597cc6ec20573fda00a007e5c0d20000000000000000000000000000000000000000000000000000ce00006700206ae4071138002dc6c03fec70f319a4145eba17765ae0c64b2232fe5baedb86e7fe4074e3c29d2fd0ed1d104c00e11a196b00000000000000000000000000000000000000000000000000000000000000019f6abbf0ba6b5bfa27f4deb6597cc6ec20573fda00206ae40711b8002625a0db86e7fe4074e3c29d2fd0ed1d104c00e11a196b111111125421ca6dc452d289314280a0f8842a65000000000000000000000000000000000000000000000000000000000000000182af49447d8a07e3bd95bd0d56f35241523fbab10020d6bdbf78af88d065e77c8cc2239327c5edb3a432268e5831111111125421ca6dc452d289314280a0f8842a6500000000000000007c2ad3dd0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000080382ecfae569e0cc101ba9a37178c6877ac901559e5200033f49b770bee69c1e1000000000000000000000000000000000000000000000000000000006642023f00000000000000000000000000000000000000000000000000000000000000a000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000041d43ae33ef4d45df95d03d40fd611a211bf38bc0ae68531f003f5bd96140019b2766ffe2bd6d0caa673486cbbe18f5567266fa8f73b28f3fa37851b9cbc19474e1c00000000000000000000000000000000000000000000000000000000000000", // Encoded contract call or empty for plain ETH transfer
    gasLimit: 1000000, // Maximum gas to spend
    gasPrice: 2607330000, // Gas price in wei
};

console.log("Using wallet address: " + wallet.address);

async function sendTransaction() {
    try {
        console.log("Sending transaction...");
        const txResponse = await wallet.sendTransaction(rawTx);
        console.log("Transaction sent! Hash:", txResponse.hash);

        // Wait for the transaction to be mined
        const receipt = await txResponse.wait();
        console.log("Transaction confirmed in block:", receipt!.blockNumber);
    } catch (error) {
        console.error("Error sending transaction:", error);
    }
}

sendTransaction();
